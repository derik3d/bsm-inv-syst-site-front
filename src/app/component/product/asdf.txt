
<div>
    <h1>Products</h1>
  
    <form [formGroup]="entityForm">
      <label for="productName">Product Name:</label>
      <input id="productName" formControlName="productName" />
  
      <label for="productDescription">Product Description:</label>
      <input id="productDescription" formControlName="productDescription" />
  
      <label for="fkProductTypeId">Product Type ID:</label>
      <input id="fkProductTypeId" formControlName="fkProductTypeId" type="number" />
  
      <!-- Create and Update buttons -->
      <button type="button" (click)="createEntity()">Create</button>
      <button type="button" *ngIf="selectedEntity" (click)="updateEntity()">Update</button>
  
      <!-- Delete button, shown only if an entity is selected and has an ID -->
      <button type="button" *ngIf="selectedEntity?.id" (click)="deleteEntity()">Delete</button>
    </form>
  
    <!-- List of entities (products) -->
    <div *ngIf="entities?.length">
      <ul>
        <li *ngFor="let entity of entities" (click)="selectEntity(entity)">
          {{ entity.productName }} - {{ entity.productDescription }}
        </li>
      </ul>
    </div>
  
    
  </div>



  --------------------------------------


  <!-- Form Section -->
<form [formGroup]="entityForm" (ngSubmit)="onSubmit()" class="form-container">
  <ul class="form-list">
    <li *ngFor="let item of getInputsArray(); trackBy: trackByKey" class="form-item">
      <div class="form-group">
        <label [for]="item.name" class="form-label">{{ item.title }}</label>
        <label [for]="item.name" class="form-description">{{ item.description }}</label>
        <input [id]="item.name" [formControlName]="item.name" type="text" class="form-input">
      </div>
    </li>
  </ul>

  <button type="submit" class="submit-button">Submit</button>
  <button (click)="createEntity()" class="query-button">Create New {{ entityClassName }}</button>
  <button (click)="updateEntity()" class="query-button">Update{{ entityClassName }}</button>
  <button (click)="deleteEntity()" class="query-button">Delete{{ entityClassName }}</button>

</form>

<!-- Query Entity Section -->
<div class="query-container" class="form-container">
  <button (click)="getEntity()" class="query-button">query one - {{ entityClassName }}</button>
  <div *ngIf="queriedEntity" class="queried-entity">
    <pre>{{ queriedEntity | json }}</pre>
  </div>
</div>

<!-- Consult Entities Section -->
<div class="consult-container" class="form-container">
  <button (click)="getEntities()" class="consult-button">Consult entities from - {{ entityClassName }}</button>
  <div *ngIf="entities?.length" class="entities-list">
    <ul>
      <li *ngFor="let entity of entities" (click)="selectEntity(entity)" class="entity-item">
        {{ entity | json }}
      </li>
    </ul>
  </div>
</div>


---------------------------------


<!-- Form Section -->
<form [formGroup]="entityForm" (ngSubmit)="onSubmit()" class="form-container">
  <ul class="form-list">
    <li *ngFor="let item of getInputsArray(); trackBy: trackByKey" class="form-item">
      <div class="form-group">
        <label [for]="item.name" class="form-label">{{ item.title }}</label>
        <label [for]="item.name" class="form-description">{{ item.description }}</label>
        <input [id]="item.name" [formControlName]="item.name" type="text" class="form-input">
      </div>
    </li>
  </ul>

  <button type="submit" class="submit-button">Submit</button>
  <button (click)="createEntity()" class="query-button">Create New {{ entityClassName }}</button>
  <button (click)="updateEntity()" class="query-button">Update{{ entityClassName }}</button>
  <button (click)="deleteEntity()" class="query-button">Delete{{ entityClassName }}</button>

</form>

<!-- Query Entity Section -->
<div class="query-container" class="form-container">
  <button (click)="getEntity()" class="query-button">query one - {{ entityClassName }}</button>
  <div *ngIf="queriedEntity" class="queried-entity">
    <pre>{{ queriedEntity | json }}</pre>
  </div>
</div>

<!-- Consult Entities Section -->
<div class="consult-container" class="form-container">
  <button (click)="getEntities()" class="consult-button">Consult entities from - {{ entityClassName }}</button>
  <div *ngIf="entities?.length" class="entities-list">
    <ul>
      <li *ngFor="let entity of entities" (click)="selectEntity(entity)" class="entity-item">
        {{ entity | json }}
      </li>
    </ul>
  </div>
</div>
----------------------------------------------------------



<form [formGroup]="entityForm" (ngSubmit)="onSubmit()">

  <ul>
    <ng-container *ngFor="let key of objectKeys(entityForm.controls);">
      <ng-container *ngTemplateOutlet="renderFormField; context: { key: key, group: entityForm }"></ng-container>
    </ng-container>
  </ul>

  <button type="submit" (click)="onSubmit()">Submit</button>
</form>

<!-- Recursive Template -->
<ng-template #renderFormField let-key="key" let-group="group">
  <ng-container *ngIf="isGroup(group.get(key)); else inputField">
    <!-- Recursive formGroup for nested objects -->
    <div [formGroupName]="key" class="form-group">
      <h3>{{ key }}</h3>
      <ul>
        <ng-container *ngFor="let nestedKey of objectKeys(group.get(key).controls)">
          <ng-container *ngTemplateOutlet="renderFormField; context: { key: nestedKey, group: group.get(key) }"></ng-container>
        </ng-container>
      </ul>
    </div>
  </ng-container>

  <!-- If it's a simple input field -->
  <ng-template #inputField>
    <label [for]="key">{{ key }}</label>
    <input [id]="key" [formControlName]="key" type="text" class="form-input" />
  </ng-template>
</ng-template>




-----------------------------------------------------------------<br><br>


    <button type="submit" class="submit-button">Submit</button>
    <button (click)="createEntity()" class="query-button">Create New {{ entityClassName }}</button>
    <button (click)="updateEntity()" class="query-button">Update{{ entityClassName }}</button>
    <button (click)="deleteEntity()" class="query-button">Delete{{ entityClassName }}</button>
  